// <auto-generated />
using System;
using Labb3API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Labb3API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Labb3API.Models.Human", b =>
                {
                    b.Property<int>("HumanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HumanId"));

                    b.Property<string>("HumanEmail")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HumanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HumanNickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HumanRandomQuote")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HumanId");

                    b.ToTable("Humans");
                });

            modelBuilder.Entity("Labb3API.Models.HumanInterest", b =>
                {
                    b.Property<int>("HumanInterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HumanInterestId"));

                    b.Property<int>("FkHumanId")
                        .HasColumnType("int");

                    b.Property<int?>("FkInterestId")
                        .HasColumnType("int");

                    b.Property<int?>("FkLinkId")
                        .HasColumnType("int");

                    b.HasKey("HumanInterestId");

                    b.HasIndex("FkHumanId");

                    b.HasIndex("FkInterestId");

                    b.HasIndex("FkLinkId");

                    b.ToTable("HumanInterests");
                });

            modelBuilder.Entity("Labb3API.Models.Interest", b =>
                {
                    b.Property<int>("InterestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InterestId"));

                    b.Property<string>("InterestDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterestTitle")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("InterestId");

                    b.ToTable("Interests");
                });

            modelBuilder.Entity("Labb3API.Models.Link", b =>
                {
                    b.Property<int>("LinkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LinkId"));

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LinkId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("Labb3API.Models.HumanInterest", b =>
                {
                    b.HasOne("Labb3API.Models.Human", "Human")
                        .WithMany()
                        .HasForeignKey("FkHumanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Labb3API.Models.Interest", "Interest")
                        .WithMany()
                        .HasForeignKey("FkInterestId");

                    b.HasOne("Labb3API.Models.Link", "Link")
                        .WithMany()
                        .HasForeignKey("FkLinkId");

                    b.Navigation("Human");

                    b.Navigation("Interest");

                    b.Navigation("Link");
                });
#pragma warning restore 612, 618
        }
    }
}
